# version: '3.7'

# services:

#     client:
#         build:
#             context: ./frontend
#             dockerfile: Dockerfile
#         tty: true
#         ports:
#             - "3000:3000"
#         volumes: 
#             - ./frontend:/app
#             - /app/node_modules
#         networks:
#             - frontend

#     # mongodb:
#     #     image: mongo
#     #     container_name: mongo
#     #     restart: unless-stopped
#     #     command: mongod --auth
#     #     environment:
#     #         MONGO_INITDB_ROOT_USERNAME: "valeri.beizer"
#     #         MONGO_INITDB_ROOT_PASSWORD: "pCV32dYi94mAS"
#     #         MONGO_INITDB_DATABASE: apple_stocks
#     #         MONGODB_DATA_DIR: /data/db
#     #     volumes:
#     #     - mongodbdata:/data/db
#     #     networks:
#     #     - backend

#     api:
#         build: 
#             context: ./backend
#             dockerfile: Dockerfile
#         command: uvicorn app.main:app --host 0.0.0.0
#         ports:
#             - "8008:8000"
#         # environment:
#         #     MONGODB_HOST: mongodb
#         #     MONGODB_USERNAME: "valeri.beizer"
#         #     MONGODB_PASSWORD: "pCV32dYi94mAS"
#         volumes:
#             #- appdata:/var/www/
#             - .:/app
#         # depends_on: 
#         #     - mongodb
#         networks:
#             - frontend
#             - backend

# networks:
#     frontend:
#     backend:
# # volumes:
# #     mongodbdata:
# #         driver: local
# #     appdata:
# #         driver: local

version: '3.9'
services:
  backend:
    build: ./backend
    ports:
      - '8000:8000'
    volumes:
      - ./backend:/app
    command: ['python', 'main.py']
  frontend:
    build: ./frontend
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/app
  database:
    image: mongo
